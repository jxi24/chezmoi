# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# BASE16_SHELL="$HOME/.config/base16-shell"
# [ -n "$PS1" ] && \
#    [ -s "$BASE16_SHELL/profile_helper.sh" ] && \
#        eval "$("$BASE16_SHELL/profile_helper.sh")"

if test -n "$KITTY_INSTALLATION_DIR"; then
    export KITTY_SHELL_INTEGRATION="enabled"
    source "$KITTY_INSTALLATION_DIR/shell-integration/bash/kitty.bash"
fi

# base16_onedark

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=10000
HISTFILESIZE=20000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
# case "$TERM" in
#     xterm-color|*-256color) color_prompt=yes;;
# esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
#unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# Change how the title is displayed to only show top 2 directories along with the git branch
two_directories() {
    if [[ "$(basename `pwd`)" =~ "isaacson" ]]; then
        echo "\w"
    elif [[ "$(basename $(dirname `pwd`))" =~ "isaacson" ]]; then
        echo "\w"
    else
        echo $(basename $(dirname `pwd`))/$(basename `pwd`)
    fi
}
#parse_git_branch() {
#    git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/*\(.*\)/ (\1)/'
#}
#set-title() {
#    if [[ -z "$ORIG" ]]; then
#        ORIG=$PS1
#    fi
#    TITLE="\[\e]2;$*\a]"
#    PS1=${ORIG}${TITLE}
#}
#
#PS1="\u@\h:\[\033[32m\] \$(two_directories)\[\033[33m\]\$(parse_git_branch)\[\033[00m\] $ "
#source ~/.bash/git-prompt.sh
#export GIT_PS1_SHOWCOLORHINTS=true
#export GIT_PS1_SHOWUPSTREAM="auto"
#
#export PROMPT_COMMAND='__git_ps1 "\[\033[01;32m\]\u@\h:\[\033[00m\] \[\033[01;34m\]\$(two_directories)" "\\\$ "'
#unset color_prompt force_color_prompt

# store colors
GREEN="\[\033[01;32m\]"
RED="\[\033[01;31m\]"
BLUE="\[\033[01;34m\]"
CYAN="\[\033[01;36m\]"
DEFAULT="\[\033[00m\]"

function color_my_prompt {
    local __user_and_host="$GREEN\u@\h"
    local __two_directories="$BLUE$(two_directories)"
    local __git_branch_color="$GREEN"
    local __prompt_tail="$DEFAULT"
    local __git_branch='$(__git_ps1)';

    if [[ "$(__git_ps1)" =~ "*" ]]; then
        __git_branch_color="$RED"
    elif [[ "$(__git_ps1)" =~ "+" ]]; then
        __git_branch_color="$CYAN"
    fi

    PS1="${debian_chroot:+($debian_chroot)}$__user_and_host$DEFAULT:$__two_directories$__git_branch_color$__git_branch$__prompt_tail$ "
}
export PROMPT_COMMAND=color_my_prompt

if [ -f ~/.bash/git-prompt.sh ]; then
    GIT_PS1_SHOWDIRTYSTATE=true
    GIT_PS1_SHOWUPSTREAM="auto"
    GIT_PS1_HIDE_IF_PWD_IGNORED=true
    GIT_PS1_SHOWCOLORHINTS=true
    . ~/.bash/git-prompt.sh
fi
unset color_prompt force_color_prompt

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='exa --color=auto --icons'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='grep --color=auto -E'
fi

# colored GCC warnings and errors
#export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# some more ls aliases
alias ll='exa -alF --icons'
alias la='exa -A --icons'
alias l='exa -CF --icons'
alias fnalvpn='sudo openconnect --user=isaacson vpn.fnal.gov --servercert sha256:be26dff9da3b7a232af5aa17fcdf6ea8b7b94529981b864e29bda44c4ebafcd3'

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi
eval "$(fzf --bash)"


# BAT
# export PATH="/home/isaacson/.local/bin:$PATH"
# export LD_LIBRARY_PATH="/home/isaacson/.local/lib:$LD_LIBRARY_PATH"
# export CPATH="/home/isaacson/.local/include:$CPATH"
# export PKG_CONFIG_PATH="/home/isaacson/.local/lib/pkgconfig:$PKG_CONFIG_PATH"

export LD_LIBRARY_PATH=
export PATH=/home/isaacson/go/bin:/snap/bin:/usr/local/cuda-11.8/bin:$PATH
export LD_LIBRARY_PATH=/home/isaacson/.local/lib:@GSLLIBPATH@:/usr/local/cuda-11.8/lib64/:$LD_LIBRARY_PATH
export PYTHONPATH=/home/isaacson/.local/lib/python3.8/site-packages:$PYTHONPATH
export ROOTSYS=/home/isaacson/.local
export GOPATH=$HOME/go

# Add ColorShower analysis to rivet path
# export RIVET_ANALYSIS_PATH=/home/isaacson/Documents/Projects/ColorShower/analysis/

# CUDA
# export PATH=/usr/local/cuda-10.0/bin${PATH:+:${PATH}}
# export LD_LIBRARY_PATH=/usr/local/cuda-10.0/lib64${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}

# Add RIVET to PYTHONPATH
# export PYTHONPATH=$PYTHONPATH:/home/isaacson/.local/lib/python2.7/site-packages
# Add other programs to PYTHONPATH
# export PYTHONPATH=$PYTHONPATH:/home/isaacson/.local/lib/python3.8/site-packages
# export PYTHONPATH=$PYTHONPATH:/home/isaacson/.local/lib/python3.7/site-packages
# source $HOME/.local/rivetenv.sh
export RIVET_ANALYSIS_PATH=/home/isaacson/.local/share/Rivet

if (complete &> /dev/null); then
    comppath="/home/isaacson/.local/etc/bash_completion.d/rivet-completion"
    test -e $comppath && source $comppath
fi

# Add .dotfiles to PATH
export PATH=~/.dotfiles/bin:$PATH

# added by Anaconda3 installer
# . /home/isaacson/.local/anaconda3/etc/profile.d/conda.sh  # commented out by conda initialize
# conda activate  # commented out by conda initialize

# set PATH so it includes user's private bin directories
export PATH="$HOME/.local/bin:$PATH"
export PATH="$HOME/.cargo/bin:$PATH"
export NOCONDA_PATH=$PATH

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/home/isaacson/anaconda3/bin/conda' 'shell.bash' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/home/isaacson/anaconda3/etc/profile.d/conda.sh" ]; then
        . "/home/isaacson/anaconda3/etc/profile.d/conda.sh"
    else
        export PATH="/home/isaacson/anaconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

# export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/home/isaacson/anaconda3/lib

eval "$(starship init bash)"
# . $HOME/.asdf/asdf.sh
# . $HOME/.asdf/completions/asdf.bash
export EDITOR=nvim
. "$HOME/.cargo/env"
# export PATH=$PATH:/home/isaacson/.spicetify

eval "$(zoxide init bash --cmd cd)"
